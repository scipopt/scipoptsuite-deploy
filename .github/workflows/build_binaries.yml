name: Build Binaries


# Authors: 
# Mark Turner
# Mohammed Ghannam 
# Stefan Vigerske
# Franziska Schloesser
# Julian Manns
# Michael Winkler
#
# This is the base workflow script for generating SCIP libraries.
# These libraries intended purpose is to be shipped with the various 
# SCIP interfaces for different programming languages (e.g. Python and Rust).
# These libraries enable users of those interfaces to not have to install SCIP themselves outside of
# the traditional package managers of their preferred programming languages.
# For example, pip install pyscipopt will now install SCIP on the users machine directly.
#
# A major issue with the development of these scripts was to statically generate
# as many dependencies as possible. This way users require a minimal amount
# of system libraries to actually install via their preferred programming language.
# Any extensions to this script should keep this design philosophy in mind.
#
# Current support:
# Linux x86-64
# MacOS x86-64
# MacOS ARM64
# Windows x86-64
#

on:
    workflow_dispatch:
        inputs:
            gcg_version:
                type: string
                description: GCG version to use
                required: true
                default: "3.7.0"
            scip_version:
                type: string
                description: SCIP version to use
                required: true
                default: "9.2.1"
            soplex_version:
                type: string
                description: Soplex version to use
                required: true
                default: "7.1.3"
            ipopt_version:
                type: string
                description: IPOPT version to use
                required: true
                default: "3.14.17"
            linux:
                type: boolean
                description: Build for Linux
                required: false
                default: true
            macos-intel:
                type: boolean
                description: Build for macOS (Intel)
                required: false
                default: true
            macos-arm:
                type: boolean
                description: Build for macOS (ARM)
                required: false
                default: true
            windows:
                type: boolean
                description: Build for Windows
                required: false
                default: true
            build_mode:
                type: string
                description: Build in debug mode
                required: false
                default: "Release"

jobs:
    print-inputs:
      runs-on: ubuntu-latest
      steps:
          - name: Print inputs
            run: |
              echo "SCIP version: ${{github.event.inputs.scip_version}}"
              echo "GCG version: ${{github.event.inputs.gcg_version}}"
              echo "Soplex version: ${{github.event.inputs.soplex_version}}"
              echo "IPOPT version: ${{github.event.inputs.ipopt_version}}"
              echo "Build mode: ${{github.event.inputs.build_mode}}"

    macos-arm-build-binaries:
        runs-on: macos-14
        if: github.event.inputs.macos-arm == 'true'
        steps:
            - uses: actions/checkout@v3
            - name: Build and install SCIP
              run: |
                export SCIP_VERSION=$(echo "${{github.event.inputs.scip_version}}" | tr -d '.')
                export GCG_VERSION=$(echo "${{github.event.inputs.gcg_version}}" | tr -d '.')
                export SOPLEX_VERSION=$(echo "${{github.event.inputs.soplex_version}}" | tr -d '.')
                export IPOPT_VERSION=${{ github.event.inputs.ipopt_version }}
                export BUILD_MODE=${{github.event.inputs.build_mode}}

                tar -xvf .github/workflows/metis-dependency/metis-5.1.0.tar.gz -C $GITHUB_WORKSPACE
                bash -x .github/workflows/scripts/macos_arm.bash

            - uses: actions/upload-artifact@v3
              with:
                path: ${{ github.workspace }}/libscip-macos-arm.zip

    macos-intel-build-binaries:
      runs-on: macos-13
      if: github.event.inputs.macos-intel == 'true'
      steps:
        - uses: actions/checkout@v3
        - uses: fortran-lang/setup-fortran@v1
          id: setup-fortran
          with:
            compiler: gcc
            version: 13
        - name: Build and install SCIP
          run: |
            export SCIP_VERSION=$(echo "${{github.event.inputs.scip_version}}" | tr -d '.')
            export GCG_VERSION=$(echo "${{github.event.inputs.gcg_version}}" | tr -d '.')
            export SOPLEX_VERSION=$(echo "${{github.event.inputs.soplex_version}}" | tr -d '.')
            export IPOPT_VERSION=${{ github.event.inputs.ipopt_version }}
            export DEVELOPER_DIR=/Applications/Xcode_14.3.1.app/Contents/Developer
            export BUILD_MODE=${{github.event.inputs.build_mode}}

            tar -xvf .github/workflows/metis-dependency/metis-5.1.0.tar.gz -C $GITHUB_WORKSPACE
            bash -x .github/workflows/scripts/macos.bash

        - uses: actions/upload-artifact@v3
          with:
            path: ${{ github.workspace }}/libscip-macos.zip

    linux-build-binaries:
        runs-on: ubuntu-latest
        if: github.event.inputs.linux == 'true'
        container: quay.io/pypa/manylinux_2_28_x86_64
        steps:
            - uses: actions/checkout@v3
            - name: Build and install SCIP
              run: |
                export SCIP_VERSION=$(echo "${{github.event.inputs.scip_version}}" | tr -d '.')
                export GCG_VERSION=$(echo "${{github.event.inputs.gcg_version}}" | tr -d '.')
                export SOPLEX_VERSION=$(echo "${{github.event.inputs.soplex_version}}" | tr -d '.')
                export IPOPT_VERSION=${{ github.event.inputs.ipopt_version }}
                export BUILD_MODE=${{github.event.inputs.build_mode}}

                bash -x .github/workflows/scripts/linux.bash
            - uses: actions/upload-artifact@v3
              with:
                path: ${{ github.workspace }}/libscip-linux.zip

    windows-build-binaries:
        runs-on: windows-latest
        if: github.event.inputs.windows == 'true'
        steps:
          - uses: actions/checkout@v3
          - uses: msys2/setup-msys2@v2

          - name: Build and install SCIP
            run:  |
              export SCIP_VERSION=$(echo "${{github.event.inputs.scip_version}}" | tr -d '.')
              export GCG_VERSION=$(echo "${{github.event.inputs.gcg_version}}" | tr -d '.')
              export SOPLEX_VERSION=$(echo "${{github.event.inputs.soplex_version}}" | tr -d '.')
              export IPOPT_VERSION=${{ github.event.inputs.ipopt_version }}
              export BUILD_MODE=${{github.event.inputs.build_mode}}
              
              bash -x .github/workflows/scripts/windows.bash
            shell: msys2 {0}

          - uses: actions/upload-artifact@v3
            with:
              path: ${{ github.workspace }}/libscip-windows.zip

